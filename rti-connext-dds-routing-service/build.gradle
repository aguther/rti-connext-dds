apply from: "../prepareRtiHostWithTarget.gradle"

// --------------------------------------------------------------------------------------------------------------------
def targetDirectory = "/opt/rti/connext-dds/routing-service"

ospackage {
    summary = "RTI Routing Service"
    description = "Welcome to RTI Routing Service, an out- of-the-box solution for integrating disparate and geo-graphically dispersed systems. It scales RTI ConnextÂ® DDS applications across domains, LANs and WANs, including firewall and NAT traversal."

    packageGroup = "Applications/Communications"

    into "$targetDirectory"

    // runtime dependencies
    requires("java")
    requires("libc.so.6()(64bit)")
    requires("libdl.so.2()(64bit)")
    requires("libm.so.6()(64bit)")
    requires("libnsl.so.1()(64bit)")
    requires("libpthread.so.0()(64bit)")
    requires("librt.so.1()(64bit)")

    // requires to base packages
    requires("chkconfig")
    requires("jpackage-utils")

    // requires runtime
    requires("rti-connext-dds(abi)", "${project.version}", EQUAL)

    // we provide the routing service
    provides("rti-connext-dds-routing-service", "${project.version}", EQUAL)

    // conflicts with SDK
    conflicts("rti-connext-dds-sdk-pro")

    // update old major versions
    obsoletes("rti-connext-dds-52-routing-service")

    // add routing service
    from("$extractionDirectoryResult") {
        include "bin/rtiroutingservice"
        include "bin/rtirssh"
        include "doc/manuals/routing_service/*"
        include "resource/app/bin/x64Linux2.6gcc4.1.1/rtiroutingservice"
        include "resource/app/bin/x64Linux2.6gcc4.1.1/rtirssh"
        include "resource/app/lib/*/libndds*.so"
        include "resource/app/lib/*/librticonnextmsgc.so"
        include "resource/app/lib/*/librtidlc.so"
        include "resource/app/lib/*/librtijniroutingservice.so"
        include "resource/app/lib/*/librtiroutingservice.so"
        include "resource/app/lib/*/librtirsassigntransf.so"
        include "resource/app/lib/*/librtirsinfrastructure.so"
        include "lib/*/librtijniroutingservice.so"
        include "lib/*/librtiroutingservice.so"
        include "lib/*/librtirsassigntransf.so"
        include "lib/*/librtirsinfrastructure.so"
        include "lib/*/rtirsadapter.jar"
        include "lib/*/rtiroutingservice.jar"
        include "resource/schema/rti_routing_service.*"
        include "resource/scripts/*"
        exclude "resource/scripts/rticommon_config.sh"
        include "resource/xml/RTI_ROUTING_SERVICE.xml"
        into ""
    }
    from("$extractionDirectoryResult") {
        include "resource/scripts/rticommon_config.sh"
        filter { String line ->
            line.replace("# copy_examples=false", "copy_examples=false\ncopy_workspace=false")
        }
        into ""
    }
    // add scripts
    from("src/main/resources/scripts") {
        into ""
    }
}

buildRpm {
    dependsOn prepareRtiHostWithTarget

    // define local installation path for links
    def applicationLinkPath        = "/usr/bin"
    def applicationLauncherPath    = "$targetDirectory/launcher"
    def javaLinkPath               = "/usr/lib/java"
    def javaInstallPath            = "$targetDirectory/lib/java"
    def libraryLinkPath            = "/usr/lib64"
    def libraryInstallPath         = "$targetDirectory/lib/x64Linux2.6gcc4.4.5"

    // routing service
    link("$applicationLinkPath/rtiroutingservice",      "$applicationLauncherPath")
    link("$applicationLinkPath/rtirssh",                "$applicationLauncherPath")
    link("$javaLinkPath/rtirsadapter.jar",              "$javaInstallPath/rtirsadapter.jar")
    link("$javaLinkPath/rtiroutingservice.jar",         "$javaInstallPath/rtiroutingservice.jar")
    link("$libraryLinkPath/librtijniroutingservice.so", "$libraryInstallPath/librtijniroutingservice.so")
    link("$libraryLinkPath/librtiroutingservice.so",    "$libraryInstallPath/librtiroutingservice.so")
    link("$libraryLinkPath/librtirsassigntransf.so",    "$libraryInstallPath/librtirsassigntransf.so")
    link("$libraryLinkPath/librtirsinfrastructure.so",  "$libraryInstallPath/librtirsinfrastructure.so")
    link("$libraryLinkPath/librtirsjniadapter.so",      "$libraryInstallPath/librtirsjniadapter.so")

    // this will be called after installation phase
    postInstall """
        # update ld configuration
        ldconfig
    """

    postUninstall """
        # update ld configuration
        ldconfig
    """
}

// --------------------------------------------------------------------------------------------------------------------
defaultTasks 'buildRpm'
